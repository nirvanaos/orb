/// \file
/// CORBA 3.0, Chapter 4

#ifndef CORBA_ORB_IDL_
#define CORBA_ORB_IDL_

#include "InterfaceRepository.idl"
#include "Request.idl"
#include "Context.idl"
#include "Policy.idl"
#include "DynamicServant.idl"
#include "RefCnt.idl"

module CORBA {

typeprefix CORBA "omg.org";

typedef sequence <Request> RequestSeq;

typedef unsigned short ServiceType;
typedef unsigned long  ServiceOption;
typedef unsigned long  ServiceDetailType;
typedef sequence <octet> OctetSeq;
typedef OctetSeq ServiceDetailData;
typedef sequence <ServiceOption> ServiceOptionSeq;

const ServiceType Security = 1;

struct ServiceDetail
{
  ServiceDetailType service_detail_type;
  ServiceDetailData service_detail;
};

typedef sequence <ServiceDetail> ServiceDetailSeq;

struct ServiceInformation
{
  ServiceOptionSeq service_options;
  ServiceDetailSeq  service_details;
};

native ValueFactory;

typedef string ORBid;

typedef short ValueModifier;

/// ORB
pseudo interface ORB
{
	typedef string ObjectId;
	typedef sequence <ObjectId> ObjectIdList;

	exception InvalidName {};

  ORBid id();

  string object_to_string (
    in Object                   obj
  );

  Object string_to_object (
    in string                   str
  );

  // Dynamic Invocation related operations

  void create_list (
    in long                     count,
    out NVList                  new_list
  );

  void create_operation_list (
    in OperationDef             oper,
    out NVList                  new_list
  );

  void get_default_context (
    out _Context                 ctx
  );

  void send_multiple_requests_oneway (
    in RequestSeq               req
  );

  void send_multiple_requests_deferred (
    in RequestSeq               req
  );

  boolean poll_next_response ();

  void get_next_response (
    out Request                 req
  ) raises (WrongTransaction);

  // Service information operations

  boolean get_service_information (
    in ServiceType              service_type,
    out ServiceInformation      service_information
  );

  ObjectIdList list_initial_services ();

  /// Resolve initial reference
	Object resolve_initial_references (
		in ObjectId identifier
	) raises (InvalidName);

  // Type code creation operations

  TypeCode create_struct_tc (
    in RepositoryId             id,
    in Identifier               name,
    in StructMemberSeq          members
  );

  TypeCode create_union_tc (
    in RepositoryId             id,
    in Identifier               name,
    in TypeCode                 discriminator_type,
    in UnionMemberSeq           members
  );

  TypeCode create_enum_tc (
    in RepositoryId             id,
    in Identifier               name,
    in EnumMemberSeq            members
  );

  TypeCode create_alias_tc (
    in RepositoryId             id,
    in Identifier               name,
    in TypeCode                 original_type
  );

  TypeCode create_exception_tc (
    in RepositoryId             id,
    in Identifier               name,
    in StructMemberSeq          members
  );

  TypeCode create_interface_tc (
    in RepositoryId             id,
    in Identifier               name
  );

  TypeCode create_string_tc (
    in unsigned long            bound
  );

  TypeCode create_wstring_tc (
    in unsigned long            bound
  );

  TypeCode create_fixed_tc (
    in unsigned short           digits,
    in short                    scale
  );

  TypeCode create_sequence_tc (
    in unsigned long            bound,
    in TypeCode                 element_type
  );

  TypeCode create_array_tc (
    in unsigned long            length,
    in TypeCode                 element_type
  );

  TypeCode create_value_tc (
    in RepositoryId             id,
    in Identifier               name,
    in ValueModifier            type_modifier,
    in TypeCode                 concrete_base,
    in ValueMemberSeq           members
  );

  TypeCode create_value_box_tc (
    in RepositoryId             id,
    in Identifier               name,
    in TypeCode                 boxed_type
  );

  TypeCode create_native_tc (
    in RepositoryId             id,
    in Identifier               name
  );

  TypeCode create_recursive_tc (
    in RepositoryId             id
  );

  TypeCode create_abstract_interface_tc (
    in RepositoryId             id,
    in Identifier               name
  );

  TypeCode create_local_interface_tc (
    in RepositoryId             id,
    in Identifier               name
  );

  TypeCode create_component_tc (
    in RepositoryId             id,
    in Identifier               name
  );

  TypeCode create_home_tc (
    in RepositoryId             id,
    in Identifier               name
  );

  TypeCode create_event_tc (
    in RepositoryId             id,
    in Identifier               name,
    in ValueModifier            type_modifier,
    in TypeCode                 concrete_base,
    in ValueMemberSeq           members
  );

  ///@{
  /// Thread related operations
  
  /// Does nothing.
  /// \returns `false`.
  boolean work_pending ();

  /// Does nothing.
  void perform_work ();

  /// Does nothing.
  void run ();

  void shutdown (
    in boolean                  wait_for_completion
  );

  /// Does nothing
  void destroy ();

  ///@}

  /// Create Policy object.
  Policy create_policy (
    in PolicyType               type,
    in any                      val
  ) raises (PolicyError);

  ///@{
  /// Value factory operations

  /// Not implemented
  ValueFactory register_value_factory (
    in RepositoryId             id,
    in ValueFactory             _factory
  );

  /// Not implemented
  void unregister_value_factory (
    in RepositoryId             id);

  /// Lookup value factory
  /// \param id Value type id.
  ValueFactory lookup_value_factory (
    in RepositoryId             id);

  ///@}

  ///@{
  /// Nirvana extensions
  
  TypeCode get_compact_typecode (in TypeCode tc);

  boolean tc_equal (in TypeCode left, in TypeCode right);
  boolean tc_equivalent (in TypeCode left, in TypeCode right);

  Internal::RefCnt create_ref_cnt (in Internal::DynamicServant deleter);

  ///@}
};

};

#endif
