/*
* Nirvana runtime library.
*
* This is a part of the Nirvana project.
*
* Author: Igor Popov
*
* Copyright (c) 2021 Igor Popov.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public
* License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*
* Send comments and/or bug reports to:
*  popov.nirvana@gmail.com
*/
#include "../IORequest.h"

module CORBA {
module Internal {

/// Low 16 bits contain the interface index.
/// High 16 bits contain the operation index within the interface.
typedef unsigned long OperationIndex;

interface Marshal;
interface Unmarshal;

/// Interoperable Object Reference.
/// 
/// Interface to the implementation of the some Inter-ORB protocol.
pseudo interface IOReference
{
	/// Returns Object reference.
	readonly attribute Object object;

	/// Create request.
	IORequest create_request ();

	void call (in IORequest iorq, in OperationIndex op);
	void call_oneway (in IORequest iorq, in OperationIndex op);
	// TBD: void call_async (in IORequest iorq, in OperationIndex op, in Interface callback);
};

};
};
