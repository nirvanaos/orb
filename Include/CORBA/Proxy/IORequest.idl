/*
* Nirvana runtime library.
*
* This is a part of the Nirvana project.
*
* Author: Igor Popov
*
* Copyright (c) 2021 Igor Popov.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public
* License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*
* Send comments and/or bug reports to:
*  popov.nirvana@gmail.com
*/
module CORBA {
module Internal {

interface Marshal;

/// \brief Interoperable Object Request.
///        Interface to the implementation of the some Inter-ORB protocol.
abstract valuetype IORequest
{
	/// Returns a marshaler associated with this call.
	/// If the marshaler does not exist, it will be created.
	/// Caller mustn't duplicate this interface.
	readonly attribute Marshal marshaler;

	/// Return exception to caller.
	void set_exception (inout any e);

	/// Marks request as successful.
	/// If request procedure return without the explicit call of success (), request will
	/// return UNKNOWN exception to caller.
	void success ();
};

};
};
